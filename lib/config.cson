# Markdown-Writer for Atom
# https://atom.io/packages/markdown-writer
#
# To find latest and default configurations, refer to:
# https://github.com/zhuochun/md-writer/blob/master/lib/config.cson
#
# NOTE 1: After edit, please run command `Window: Reload` or
#         Use menu: View -> Developer -> Reload Window.
#
# NOTE 2: Strings need to be quoted.

# website of your blog
siteUrl: ""
# root directory of your blog
siteLocalDir: ""
# directory to drafts from siteLocalDir
siteDraftsDir: "_drafts/"
# directory to posts from siteLocalDir
sitePostsDir: "_posts/{year}/"
# directory to images from siteLocalDir
siteImagesDir: "images/{year}/{month}/"

# URLs to tags/posts/categories JSON files
# https://github.com/zhuochun/md-writer/wiki/Settings-for-Front-Matters
urlForPosts: ""
urlForTags: ""
urlForCategories: ""

# The front matter key name
frontMatterNameTags: "tags"
frontMatterNameCategories: "categories"

# filename format of new drafts created
newDraftFileName: "{slug}{extension}"
# filename format of new posts created
newPostFileName: "{year}-{month}-{day}-{slug}{extension}"

# front matter date format, determines the {date} in frontMatter
frontMatterDate: "{year}-{month}-{day} {hour}:{minute}"
# front matter template
frontMatter: """
---
layout: "{layout}"
title: "{title}"
date: "{date}"
---
"""

# file extension of posts/drafts
fileExtension: ".markdown"
# file slug separator
slugSeparator: "-"

# whether rename filename based on title in front matter when publishing
publishRenameBasedOnTitle: false
# whether publish keep draft's extension name used
publishKeepFileExtname: false

# list continuation in middle of line
inlineNewLineContinuation: false

# path to a cson file that stores links added for automatic linking
# commented to use the default `markdown-writer-links.cson` file
# under your Atom global config directory
# siteLinkPath: "set/path/to/links.cson"

# TextStyles and LineStyles
#
# In `regex{Before,After}`, `regexMatch{Before,After}`, DO NOT USE CAPTURE GROUP!
# Capture group will break things! USE non-capturing group `(?:)` instead.
#
# Use `regexMatch{Before,After}` when an exact match of the style is needed.
# If this regex matched true, the style will be toggled.
#
# Use `regex{Before,After}` when a general match of the style is wanted.
# If this regex matched true, the style will be replaced by new style.
#
# When `regexMatch{Before,After}` is not specified, `regex{Before,After}` is used instead.
#
# Use `before` and `after` to insert text around the selected text.
#
textStyles:
  code:
    before: "`", after: "`"
  bold:
    before: "**", after: "**"
  italic:
    before: "_", after: "_"
  keystroke:
    before: "<kbd>", after: "</kbd>"
  strikethrough:
    before: "~~", after: "~~"
  codeblock:
    before: "```\n"
    after: "\n```"
    regexBefore: "```(?:[\\w- ]+)?\\n"
    regexAfter: "\\n```"

lineStyles:
  h1: before: "# "
  h2: before: "## "
  h3: before: "### "
  h4: before: "#### "
  h5: before: "##### "
  ul:
    before: "- ",
    regexMatchBefore: "(?:-|\\*|\\+)\\s"
    regexBefore: "(?:-|\\*|\\+|\\d+\\.)\\s"
  ol:
    before: "1. ",
    regexMatchBefore: "(?:\\d+\\.)\\s"
    regexBefore: "(?:-|\\*|\\+|\\d+\\.)\\s"
  task:
    before: "- [ ] ",
    regexMatchBefore: "(?:-|\\*|\\+|\\d+\\.)\\s+\\[ ]\\s"
    regexBefore: "(?:-|\\*|\\+|\\d+\\.)\\s*(?:\\[[xX ]])?\\s"
  taskdone:
    before: "- [X] ",
    regexMatchBefore: "(?:-|\\*|\\+|\\d+\\.)\\s+\\[[xX]]\\s"
    regexBefore: "(?:-|\\*|\\+|\\d+\\.)\\s*(?:\\[[xX ]])?\\s"
  blockquote: before: "> "

# image tag template
imageTag: "![{alt}]({src})"
# use relative path to image from the opened file
relativeImagePath: false

# inline link tag template
linkInlineTag: "[{text}]({url})"
# reference link tag template
referenceInlineTag: "[{text}][{label}]"
referenceDefinitionTag: '{indent}[{label}]: {url} "{title}"'
# reference link tag insert position: "paragraph", "article"
referenceInsertPosition: "paragraph"
# reference link tag indent space: 0, 2
referenceIndentLength: 2

# table default alignments: "empty", "left", "right", "center"
tableAlignment: "empty"
# insert extra pipes at the beginning and the end of table rows
tableExtraPipes: false

# template variables is a key-value map used in template string
# e.g. you can have `posts/{author}/{year}` in newPostFileName after you set author.
templateVariables:
  author: "your name"
